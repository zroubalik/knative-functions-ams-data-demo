{"ast":null,"code":"import * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultContextValue = {\n  disableDefaultClasses: false\n};\nvar ClassNameConfiguratorContext = /*#__PURE__*/React.createContext(defaultContextValue);\n/**\n * @ignore - internal hook.\n *\n * Wraps the `generateUtilityClass` function and controls how the classes are generated.\n * Currently it only affects whether the classes are applied or not.\n *\n * @returns Function to be called with the `generateUtilityClass` function specific to a component to generate the classes.\n */\nexport function useClassNamesOverride(generateUtilityClass) {\n  var _React$useContext = React.useContext(ClassNameConfiguratorContext),\n    disableDefaultClasses = _React$useContext.disableDefaultClasses;\n  return function (slot) {\n    if (disableDefaultClasses) {\n      return '';\n    }\n    return generateUtilityClass(slot);\n  };\n}\n\n/**\n * Allows to configure the components within to not apply any built-in classes.\n */\nexport default function ClassNameConfigurator(props) {\n  var disableDefaultClasses = props.disableDefaultClasses,\n    children = props.children;\n  var contextValue = React.useMemo(function () {\n    return {\n      disableDefaultClasses: disableDefaultClasses != null ? disableDefaultClasses : false\n    };\n  }, [disableDefaultClasses]);\n  return /*#__PURE__*/_jsx(ClassNameConfiguratorContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n}","map":null,"metadata":{},"sourceType":"module"}