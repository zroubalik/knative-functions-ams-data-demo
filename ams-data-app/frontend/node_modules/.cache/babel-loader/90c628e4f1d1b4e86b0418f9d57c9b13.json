{"ast":null,"code":"import _slicedToArray from \"/Users/zroubali/knative-functions-ams-data-demo/ams-data-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/zroubali/knative-functions-ams-data-demo/ams-data-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nfunction appendLevel(level) {\n  if (!level) {\n    return '';\n  }\n  return \"Level\".concat(level);\n}\nfunction isNestedContainer(ownerState) {\n  return ownerState.unstable_level > 0 && ownerState.container;\n}\nfunction createGetSelfSpacing(ownerState) {\n  return function getSelfSpacing(axis) {\n    return \"var(--Grid-\".concat(axis, \"Spacing\").concat(appendLevel(ownerState.unstable_level), \")\");\n  };\n}\nfunction createGetParentSpacing(ownerState) {\n  return function getParentSpacing(axis) {\n    if (ownerState.unstable_level === 0) {\n      return \"var(--Grid-\".concat(axis, \"Spacing)\");\n    }\n    return \"var(--Grid-\".concat(axis, \"Spacing\").concat(appendLevel(ownerState.unstable_level - 1), \")\");\n  };\n}\nfunction getParentColumns(ownerState) {\n  if (ownerState.unstable_level === 0) {\n    return \"var(--Grid-columns)\";\n  }\n  return \"var(--Grid-columns\".concat(appendLevel(ownerState.unstable_level - 1), \")\");\n}\nexport var filterBreakpointKeys = function filterBreakpointKeys(breakpointsKeys, responsiveKeys) {\n  return breakpointsKeys.filter(function (key) {\n    return responsiveKeys.includes(key);\n  });\n};\nexport var traverseBreakpoints = function traverseBreakpoints(breakpoints, responsive, iterator) {\n  var smallestBreakpoint = breakpoints.keys[0]; // the keys is sorted from smallest to largest by `createBreakpoints`.\n\n  if (Array.isArray(responsive)) {\n    responsive.forEach(function (breakpointValue, index) {\n      iterator(function (responsiveStyles, style) {\n        if (index <= breakpoints.keys.length - 1) {\n          if (index === 0) {\n            Object.assign(responsiveStyles, style);\n          } else {\n            responsiveStyles[breakpoints.up(breakpoints.keys[index])] = style;\n          }\n        }\n      }, breakpointValue);\n    });\n  } else if (responsive && typeof responsive === 'object') {\n    // prevent null\n    // responsive could be a very big object, pick the smallest responsive values\n\n    var keys = Object.keys(responsive).length > breakpoints.keys.length ? breakpoints.keys : filterBreakpointKeys(breakpoints.keys, Object.keys(responsive));\n    keys.forEach(function (key) {\n      if (breakpoints.keys.indexOf(key) !== -1) {\n        // @ts-ignore already checked that responsive is an object\n        var breakpointValue = responsive[key];\n        if (breakpointValue !== undefined) {\n          iterator(function (responsiveStyles, style) {\n            if (smallestBreakpoint === key) {\n              Object.assign(responsiveStyles, style);\n            } else {\n              responsiveStyles[breakpoints.up(key)] = style;\n            }\n          }, breakpointValue);\n        }\n      }\n    });\n  } else if (typeof responsive === 'number' || typeof responsive === 'string') {\n    iterator(function (responsiveStyles, style) {\n      Object.assign(responsiveStyles, style);\n    }, responsive);\n  }\n};\nexport var generateGridSizeStyles = function generateGridSizeStyles(_ref) {\n  var theme = _ref.theme,\n    ownerState = _ref.ownerState;\n  var getSelfSpacing = createGetSelfSpacing(ownerState);\n  var styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.gridSize, function (appendStyle, value) {\n    var style = {};\n    if (value === true) {\n      style = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    }\n    if (value === 'auto') {\n      style = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    }\n    if (typeof value === 'number') {\n      style = {\n        flexGrow: 0,\n        flexBasis: 'auto',\n        width: \"calc(100% * \".concat(value, \" / \").concat(getParentColumns(ownerState)).concat(isNestedContainer(ownerState) ? \" + \".concat(getSelfSpacing('column')) : '', \")\")\n      };\n    }\n    appendStyle(styles, style);\n  });\n  return styles;\n};\nexport var generateGridOffsetStyles = function generateGridOffsetStyles(_ref2) {\n  var theme = _ref2.theme,\n    ownerState = _ref2.ownerState;\n  var styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.gridOffset, function (appendStyle, value) {\n    var style = {};\n    if (value === 'auto') {\n      style = {\n        marginLeft: 'auto'\n      };\n    }\n    if (typeof value === 'number') {\n      style = {\n        marginLeft: value === 0 ? '0px' : \"calc(100% * \".concat(value, \" / \").concat(getParentColumns(ownerState), \")\")\n      };\n    }\n    appendStyle(styles, style);\n  });\n  return styles;\n};\nexport var generateGridColumnsStyles = function generateGridColumnsStyles(_ref3) {\n  var theme = _ref3.theme,\n    ownerState = _ref3.ownerState;\n  if (!ownerState.container) {\n    return {};\n  }\n  var styles = isNestedContainer(ownerState) ? _defineProperty({}, \"--Grid-columns\".concat(appendLevel(ownerState.unstable_level)), getParentColumns(ownerState)) : {\n    '--Grid-columns': 12\n  };\n  traverseBreakpoints(theme.breakpoints, ownerState.columns, function (appendStyle, value) {\n    appendStyle(styles, _defineProperty({}, \"--Grid-columns\".concat(appendLevel(ownerState.unstable_level)), value));\n  });\n  return styles;\n};\nexport var generateGridRowSpacingStyles = function generateGridRowSpacingStyles(_ref5) {\n  var theme = _ref5.theme,\n    ownerState = _ref5.ownerState;\n  if (!ownerState.container) {\n    return {};\n  }\n  var getParentSpacing = createGetParentSpacing(ownerState);\n  var styles = isNestedContainer(ownerState) ? _defineProperty({}, \"--Grid-rowSpacing\".concat(appendLevel(ownerState.unstable_level)), getParentSpacing('row')) : {};\n  traverseBreakpoints(theme.breakpoints, ownerState.rowSpacing, function (appendStyle, value) {\n    var _theme$spacing;\n    appendStyle(styles, _defineProperty({}, \"--Grid-rowSpacing\".concat(appendLevel(ownerState.unstable_level)), typeof value === 'string' ? value : (_theme$spacing = theme.spacing) == null ? void 0 : _theme$spacing.call(theme, value)));\n  });\n  return styles;\n};\nexport var generateGridColumnSpacingStyles = function generateGridColumnSpacingStyles(_ref7) {\n  var theme = _ref7.theme,\n    ownerState = _ref7.ownerState;\n  if (!ownerState.container) {\n    return {};\n  }\n  var getParentSpacing = createGetParentSpacing(ownerState);\n  var styles = isNestedContainer(ownerState) ? _defineProperty({}, \"--Grid-columnSpacing\".concat(appendLevel(ownerState.unstable_level)), getParentSpacing('column')) : {};\n  traverseBreakpoints(theme.breakpoints, ownerState.columnSpacing, function (appendStyle, value) {\n    var _theme$spacing2;\n    appendStyle(styles, _defineProperty({}, \"--Grid-columnSpacing\".concat(appendLevel(ownerState.unstable_level)), typeof value === 'string' ? value : (_theme$spacing2 = theme.spacing) == null ? void 0 : _theme$spacing2.call(theme, value)));\n  });\n  return styles;\n};\nexport var generateGridDirectionStyles = function generateGridDirectionStyles(_ref9) {\n  var theme = _ref9.theme,\n    ownerState = _ref9.ownerState;\n  if (!ownerState.container) {\n    return {};\n  }\n  var styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.direction, function (appendStyle, value) {\n    appendStyle(styles, {\n      flexDirection: value\n    });\n  });\n  return styles;\n};\nexport var generateGridStyles = function generateGridStyles(_ref10) {\n  var ownerState = _ref10.ownerState;\n  var getSelfSpacing = createGetSelfSpacing(ownerState);\n  var getParentSpacing = createGetParentSpacing(ownerState);\n  return _extends({\n    minWidth: 0,\n    boxSizing: 'border-box'\n  }, ownerState.container && _extends({\n    display: 'flex',\n    flexWrap: 'wrap'\n  }, ownerState.wrap && ownerState.wrap !== 'wrap' && {\n    flexWrap: ownerState.wrap\n  }, {\n    margin: \"calc(\".concat(getSelfSpacing('row'), \" / -2) calc(\").concat(getSelfSpacing('column'), \" / -2)\")\n  }, ownerState.disableEqualOverflow && {\n    margin: \"calc(\".concat(getSelfSpacing('row'), \" * -1) 0px 0px calc(\").concat(getSelfSpacing('column'), \" * -1)\")\n  }), (!ownerState.container || isNestedContainer(ownerState)) && _extends({\n    padding: \"calc(\".concat(getParentSpacing('row'), \" / 2) calc(\").concat(getParentSpacing('column'), \" / 2)\")\n  }, (ownerState.disableEqualOverflow || ownerState.parentDisableEqualOverflow) && {\n    padding: \"\".concat(getParentSpacing('row'), \" 0px 0px \").concat(getParentSpacing('column'))\n  }));\n};\nexport var generateSizeClassNames = function generateSizeClassNames(gridSize) {\n  var classNames = [];\n  Object.entries(gridSize).forEach(function (_ref11) {\n    var _ref12 = _slicedToArray(_ref11, 2),\n      key = _ref12[0],\n      value = _ref12[1];\n    if (value !== false && value !== undefined) {\n      classNames.push(\"grid-\".concat(key, \"-\").concat(String(value)));\n    }\n  });\n  return classNames;\n};\nexport var generateSpacingClassNames = function generateSpacingClassNames(spacing) {\n  var smallestBreakpoint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'xs';\n  function isValidSpacing(val) {\n    if (val === undefined) {\n      return false;\n    }\n    return typeof val === 'string' && !Number.isNaN(Number(val)) || typeof val === 'number' && val > 0;\n  }\n  if (isValidSpacing(spacing)) {\n    return [\"spacing-\".concat(smallestBreakpoint, \"-\").concat(String(spacing))];\n  }\n  if (typeof spacing === 'object' && !Array.isArray(spacing)) {\n    var classNames = [];\n    Object.entries(spacing).forEach(function (_ref13) {\n      var _ref14 = _slicedToArray(_ref13, 2),\n        key = _ref14[0],\n        value = _ref14[1];\n      if (isValidSpacing(value)) {\n        classNames.push(\"spacing-\".concat(key, \"-\").concat(String(value)));\n      }\n    });\n    return classNames;\n  }\n  return [];\n};\nexport var generateDirectionClasses = function generateDirectionClasses(direction) {\n  if (direction === undefined) {\n    return [];\n  }\n  if (typeof direction === 'object') {\n    return Object.entries(direction).map(function (_ref15) {\n      var _ref16 = _slicedToArray(_ref15, 2),\n        key = _ref16[0],\n        value = _ref16[1];\n      return \"direction-\".concat(key, \"-\").concat(value);\n    });\n  }\n  return [\"direction-xs-\".concat(String(direction))];\n};","map":null,"metadata":{},"sourceType":"module"}