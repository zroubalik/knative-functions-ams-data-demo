{"ast":null,"code":"import _defineProperty from \"/Users/zroubali/knative-functions-ams-data-demo/ams-data-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"defaultProps\", \"mixins\", \"overrides\", \"palette\", \"props\", \"styleOverrides\"],\n  _excluded2 = [\"type\", \"mode\"];\nimport { createBreakpoints, createSpacing } from '@mui/system';\nexport default function adaptV4Theme(inputTheme) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(['MUI: adaptV4Theme() is deprecated.', 'Follow the upgrade guide on https://mui.com/r/migration-v4#theme.'].join('\\n'));\n  }\n  var _inputTheme$defaultPr = inputTheme.defaultProps,\n    defaultProps = _inputTheme$defaultPr === void 0 ? {} : _inputTheme$defaultPr,\n    _inputTheme$mixins = inputTheme.mixins,\n    mixins = _inputTheme$mixins === void 0 ? {} : _inputTheme$mixins,\n    _inputTheme$overrides = inputTheme.overrides,\n    overrides = _inputTheme$overrides === void 0 ? {} : _inputTheme$overrides,\n    _inputTheme$palette = inputTheme.palette,\n    palette = _inputTheme$palette === void 0 ? {} : _inputTheme$palette,\n    _inputTheme$props = inputTheme.props,\n    props = _inputTheme$props === void 0 ? {} : _inputTheme$props,\n    _inputTheme$styleOver = inputTheme.styleOverrides,\n    styleOverrides = _inputTheme$styleOver === void 0 ? {} : _inputTheme$styleOver,\n    other = _objectWithoutPropertiesLoose(inputTheme, _excluded);\n  var theme = _extends({}, other, {\n    components: {}\n  });\n\n  // default props\n  Object.keys(defaultProps).forEach(function (component) {\n    var componentValue = theme.components[component] || {};\n    componentValue.defaultProps = defaultProps[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(props).forEach(function (component) {\n    var componentValue = theme.components[component] || {};\n    componentValue.defaultProps = props[component];\n    theme.components[component] = componentValue;\n  });\n\n  // CSS overrides\n  Object.keys(styleOverrides).forEach(function (component) {\n    var componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = styleOverrides[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(overrides).forEach(function (component) {\n    var componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = overrides[component];\n    theme.components[component] = componentValue;\n  });\n\n  // theme.spacing\n  theme.spacing = createSpacing(inputTheme.spacing);\n\n  // theme.mixins.gutters\n  var breakpoints = createBreakpoints(inputTheme.breakpoints || {});\n  var spacing = theme.spacing;\n  theme.mixins = _extends({\n    gutters: function gutters() {\n      var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2)\n      }, styles, _defineProperty({}, breakpoints.up('sm'), _extends({\n        paddingLeft: spacing(3),\n        paddingRight: spacing(3)\n      }, styles[breakpoints.up('sm')])));\n    }\n  }, mixins);\n  var typeInput = palette.type,\n    modeInput = palette.mode,\n    paletteRest = _objectWithoutPropertiesLoose(palette, _excluded2);\n  var finalMode = modeInput || typeInput || 'light';\n  theme.palette = _extends({\n    // theme.palette.text.hint\n    text: {\n      hint: finalMode === 'dark' ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.38)'\n    },\n    mode: finalMode,\n    type: finalMode\n  }, paletteRest);\n  return theme;\n}","map":null,"metadata":{},"sourceType":"module"}