{"ast":null,"code":"import _slicedToArray from \"/Users/zroubali/kubecon-eu-2023-demo/ams-data-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nimport { useCompoundParent } from '../utils/useCompound';\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabs API](https://mui.com/base/react-tabs/hooks-api/#use-tabs)\n */\nfunction useTabs(parameters) {\n  var valueProp = parameters.value,\n    defaultValue = parameters.defaultValue,\n    onChange = parameters.onChange,\n    orientation = parameters.orientation,\n    direction = parameters.direction,\n    selectionFollowsFocus = parameters.selectionFollowsFocus;\n  var _useControlled = useControlled({\n      controlled: valueProp,\n      default: defaultValue,\n      name: 'Tabs',\n      state: 'value'\n    }),\n    _useControlled2 = _slicedToArray(_useControlled, 2),\n    value = _useControlled2[0],\n    setValue = _useControlled2[1];\n  var onSelected = React.useCallback(function (event, newValue) {\n    setValue(newValue);\n    onChange == null ? void 0 : onChange(event, newValue);\n  }, [onChange, setValue]);\n  var _useCompoundParent = useCompoundParent(),\n    tabPanels = _useCompoundParent.subitems,\n    compoundComponentContextValue = _useCompoundParent.contextValue;\n  var tabIdLookup = React.useRef(function () {\n    return undefined;\n  });\n  var getTabPanelId = React.useCallback(function (tabValue) {\n    var _tabPanels$get;\n    return (_tabPanels$get = tabPanels.get(tabValue)) == null ? void 0 : _tabPanels$get.id;\n  }, [tabPanels]);\n  var getTabId = React.useCallback(function (tabPanelId) {\n    return tabIdLookup.current(tabPanelId);\n  }, []);\n  var registerTabIdLookup = React.useCallback(function (lookupFunction) {\n    tabIdLookup.current = lookupFunction;\n  }, []);\n  return {\n    contextValue: _extends({\n      direction: direction,\n      getTabId: getTabId,\n      getTabPanelId: getTabPanelId,\n      onSelected: onSelected,\n      orientation: orientation,\n      registerTabIdLookup: registerTabIdLookup,\n      selectionFollowsFocus: selectionFollowsFocus,\n      value: value\n    }, compoundComponentContextValue)\n  };\n}\nexport default useTabs;","map":null,"metadata":{},"sourceType":"module"}