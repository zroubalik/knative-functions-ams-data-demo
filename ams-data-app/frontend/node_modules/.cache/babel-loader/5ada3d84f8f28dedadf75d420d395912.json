{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"activeStep\", \"alternativeLabel\", \"children\", \"className\", \"component\", \"connector\", \"nonLinear\", \"orientation\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getStepperUtilityClass } from './stepperClasses';\nimport StepConnector from '../StepConnector';\nimport StepperContext from './StepperContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var orientation = ownerState.orientation,\n    alternativeLabel = ownerState.alternativeLabel,\n    classes = ownerState.classes;\n  var slots = {\n    root: ['root', orientation, alternativeLabel && 'alternativeLabel']\n  };\n  return composeClasses(slots, getStepperUtilityClass, classes);\n};\nvar StepperRoot = styled('div', {\n  name: 'MuiStepper',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, styles[ownerState.orientation], ownerState.alternativeLabel && styles.alternativeLabel];\n  }\n})(function (_ref) {\n  var ownerState = _ref.ownerState;\n  return _extends({\n    display: 'flex'\n  }, ownerState.orientation === 'horizontal' && {\n    flexDirection: 'row',\n    alignItems: 'center'\n  }, ownerState.orientation === 'vertical' && {\n    flexDirection: 'column'\n  }, ownerState.alternativeLabel && {\n    alignItems: 'flex-start'\n  });\n});\nvar defaultConnector = /*#__PURE__*/_jsx(StepConnector, {});\nvar Stepper = /*#__PURE__*/React.forwardRef(function Stepper(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiStepper'\n  });\n  var _props$activeStep = props.activeStep,\n    activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep,\n    _props$alternativeLab = props.alternativeLabel,\n    alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n    children = props.children,\n    className = props.className,\n    _props$component = props.component,\n    component = _props$component === void 0 ? 'div' : _props$component,\n    _props$connector = props.connector,\n    connector = _props$connector === void 0 ? defaultConnector : _props$connector,\n    _props$nonLinear = props.nonLinear,\n    nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear,\n    _props$orientation = props.orientation,\n    orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var ownerState = _extends({}, props, {\n    alternativeLabel: alternativeLabel,\n    orientation: orientation,\n    component: component\n  });\n  var classes = useUtilityClasses(ownerState);\n  var childrenArray = React.Children.toArray(children).filter(Boolean);\n  var steps = childrenArray.map(function (step, index) {\n    return /*#__PURE__*/React.cloneElement(step, _extends({\n      index: index,\n      last: index + 1 === childrenArray.length\n    }, step.props));\n  });\n  var contextValue = React.useMemo(function () {\n    return {\n      activeStep: activeStep,\n      alternativeLabel: alternativeLabel,\n      connector: connector,\n      nonLinear: nonLinear,\n      orientation: orientation\n    };\n  }, [activeStep, alternativeLabel, connector, nonLinear, orientation]);\n  return /*#__PURE__*/_jsx(StepperContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(StepperRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: steps\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the active step (zero based index).\n   * Set to -1 to disable all the steps.\n   * @default 0\n   */\n  activeStep: integerPropType,\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   * @default false\n   */\n  alternativeLabel: PropTypes.bool,\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * An element to be placed between each step.\n   * @default <StepConnector />\n   */\n  connector: PropTypes.element,\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   * @default false\n   */\n  nonLinear: PropTypes.bool,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stepper;","map":null,"metadata":{},"sourceType":"module"}