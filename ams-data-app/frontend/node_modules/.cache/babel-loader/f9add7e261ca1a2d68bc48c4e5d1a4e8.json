{"ast":null,"code":"import * as React from 'react';\nexport function createMessageBus() {\n  var listeners = new Map();\n  function subscribe(topic, callback) {\n    var topicListeners = listeners.get(topic);\n    if (!topicListeners) {\n      topicListeners = new Set([callback]);\n      listeners.set(topic, topicListeners);\n    } else {\n      topicListeners.add(callback);\n    }\n    return function () {\n      topicListeners.delete(callback);\n      if (topicListeners.size === 0) {\n        listeners.delete(topic);\n      }\n    };\n  }\n  function publish(topic) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    var topicListeners = listeners.get(topic);\n    if (topicListeners) {\n      topicListeners.forEach(function (callback) {\n        return callback.apply(void 0, args);\n      });\n    }\n  }\n  return {\n    subscribe: subscribe,\n    publish: publish\n  };\n}\n\n/**\n * @ignore - internal hook.\n */\nexport default function useMessageBus() {\n  var bus = React.useRef();\n  if (!bus.current) {\n    bus.current = createMessageBus();\n  }\n  return bus.current;\n}","map":null,"metadata":{},"sourceType":"module"}