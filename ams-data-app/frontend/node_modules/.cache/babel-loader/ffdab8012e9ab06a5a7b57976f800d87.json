{"ast":null,"code":"import _createClass from \"/Users/zroubali/kubecon-eu-2023-demo/ams-data-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/zroubali/kubecon-eu-2023-demo/ams-data-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _assertThisInitialized from \"/Users/zroubali/kubecon-eu-2023-demo/ams-data-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/zroubali/kubecon-eu-2023-demo/ams-data-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/zroubali/kubecon-eu-2023-demo/ams-data-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zroubali/kubecon-eu-2023-demo/ams-data-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zroubali/kubecon-eu-2023-demo/ams-data-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _wrapNativeSuper from \"/Users/zroubali/kubecon-eu-2023-demo/ams-data-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nvar TransportError = /*#__PURE__*/function (_Error) {\n  _inherits(TransportError, _Error);\n  function TransportError(reason, description, context) {\n    var _this;\n    _classCallCheck(this, TransportError);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransportError).call(this, reason));\n    _this.description = description;\n    _this.context = context;\n    _this.type = \"TransportError\";\n    return _this;\n  }\n  return TransportError;\n}(_wrapNativeSuper(Error));\nexport var Transport = /*#__PURE__*/function (_Emitter) {\n  _inherits(Transport, _Emitter);\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} opts - options\n   * @protected\n   */\n  function Transport(opts) {\n    var _this2;\n    _classCallCheck(this, Transport);\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Transport).call(this));\n    _this2.writable = false;\n    installTimerFunctions(_assertThisInitialized(_assertThisInitialized(_this2)), opts);\n    _this2.opts = opts;\n    _this2.query = opts.query;\n    _this2.socket = opts.socket;\n    return _this2;\n  }\n  /**\n   * Emits an error.\n   *\n   * @param {String} reason\n   * @param description\n   * @param context - the error context\n   * @return {Transport} for chaining\n   * @protected\n   */\n  _createClass(Transport, [{\n    key: \"onError\",\n    value: function onError(reason, description, context) {\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"error\", new TransportError(reason, description, context));\n      return this;\n    }\n    /**\n     * Opens the transport.\n     */\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.readyState = \"opening\";\n      this.doOpen();\n      return this;\n    }\n    /**\n     * Closes the transport.\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.readyState === \"opening\" || this.readyState === \"open\") {\n        this.doClose();\n        this.onClose();\n      }\n      return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n  }, {\n    key: \"send\",\n    value: function send(packets) {\n      if (this.readyState === \"open\") {\n        this.write(packets);\n      } else {\n        // this might happen if the transport was silently closed in the beforeunload event handler\n      }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n  }, {\n    key: \"onOpen\",\n    value: function onOpen() {\n      this.readyState = \"open\";\n      this.writable = true;\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      var packet = decodePacket(data, this.socket.binaryType);\n      this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n  }, {\n    key: \"onPacket\",\n    value: function onPacket(packet) {\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n  }, {\n    key: \"onClose\",\n    value: function onClose(details) {\n      this.readyState = \"closed\";\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n  }, {\n    key: \"pause\",\n    value: function pause(onPause) {}\n  }]);\n  return Transport;\n}(Emitter);","map":null,"metadata":{},"sourceType":"module"}