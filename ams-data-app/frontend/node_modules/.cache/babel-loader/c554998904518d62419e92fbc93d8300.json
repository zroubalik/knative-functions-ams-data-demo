{"ast":null,"code":"import _defineProperty from \"/Users/zroubali/knative-functions-ams-data-demo/ams-data-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport dialogTitleClasses from '../DialogTitle/dialogTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n    dividers = ownerState.dividers;\n  var slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\nvar DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(function (_ref) {\n  var theme = _ref.theme,\n    ownerState = _ref.ownerState;\n  return _extends({\n    flex: '1 1 auto',\n    // Add iOS momentum scrolling for iOS < 13.0\n    WebkitOverflowScrolling: 'touch',\n    overflowY: 'auto',\n    padding: '20px 24px'\n  }, ownerState.dividers ? {\n    padding: '16px 24px',\n    borderTop: \"1px solid \".concat((theme.vars || theme).palette.divider),\n    borderBottom: \"1px solid \".concat((theme.vars || theme).palette.divider)\n  } : _defineProperty({}, \".\".concat(dialogTitleClasses.root, \" + &\"), {\n    paddingTop: 0\n  }));\n});\nvar DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n  var className = props.className,\n    _props$dividers = props.dividers,\n    dividers = _props$dividers === void 0 ? false : _props$dividers,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var ownerState = _extends({}, props, {\n    dividers: dividers\n  });\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContent;","map":null,"metadata":{},"sourceType":"module"}